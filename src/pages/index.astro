---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
import ArtCard from "../components/ArtCard.astro";
import BlogCard from "../components/BlogCard.astro";
import RecomendsCard from "../components/RecomendsCard.astro";
import { shuffle } from "../utils";

const blog = (await getCollection("blog")).sort(
  (a: any, b: any) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const art = await getCollection("art");
const recomends = await getCollection("recomends");

let content = [...blog, ...art, ...recomends];
shuffle(content);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <script src="../scripts/grid.js"
    ></script>
  </head>
  <body>
    <Header />
    <main>
      <div
        class="grid container"
        data-masonry='{ "itemSelector": ".grid-item", "gutter": 20,"fitWidth": true,"horizontalOrder": true}'
      >
        {
          content.map((post) => {
            switch (post.data.type) {
              case "art":
                return (
                  <div class="grid-item">
                    {" "}
                    <ArtCard {...post.data} />
                  </div>
                );

              case "blog":
                return (
                  <div class="grid-item ">
                    <BlogCard {...post.data} />
                  </div>
                );
              case "recomends":
                return (
                  <div class="grid-item">
                    {" "}
                    <RecomendsCard {...post.data} />
                  </div>
                );
            }
          })
        }
      </div>
    </main>
    <Footer />
  </body><style>
    main {
      background-image: radial-gradient(#999 5%, transparent 0);
      background-size: 35px 35px;
    }
    li {
      list-style: none;
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
    }
    .grid {
      margin: 0 auto;
    }
    .grid-item {
      margin-bottom: 10px;
    }
    a {
      text-decoration: none;
    }
    ul {
      padding: 0;
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 52px;
    }

    .title {
      font-size: 24px;
      font-weight: 400;
      margin-top: 15px;
      line-height: 36px;
    }
    .description {
      font-weight: 400;
      line-height: 21px;
      font-size: 0.8em;
      margin-top: 15px;
      color: #1e1e1e;
    }
    .container {
    }
    .img-container {
      background-color: #f4f4f4;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 24px;
      border-radius: 24px;
      min-height: 300px;
      max-height: 300px;
    }
    img {
      width: 320px;
    }

    @media (max-width: 800px) {
      .img-container {
        min-height: 200px;
        max-height: 200px;
      }
      ul {
        grid-template-columns: 1fr;
      }
    }
  </style>
</html>
